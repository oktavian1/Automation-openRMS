name: OpenMRS Playwright E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Test tag to run (e.g., @smoke, @regression)'
        required: false
        default: '@smoke'
      browser:
        description: 'Browser to test'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - all

env:
  # Test environment configuration
  BASE_URL: ${{ secrets.BASE_URL || 'https://o2.openmrs.org' }}
  ADMIN_USER: ${{ secrets.ADMIN_USER || 'admin' }}
  ADMIN_PASS: ${{ secrets.ADMIN_PASS || 'Admin123' }}
  DEFAULT_LOCATION: ${{ secrets.DEFAULT_LOCATION || 'Inpatient Ward' }}
  CI: true

jobs:
  # Lint and type check
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: Type check
        run: npm run type-check

  # Test execution matrix
  test:
    name: Test (${{ matrix.browser }})
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    strategy:
      fail-fast: false
      matrix:
        browser: ${{ github.event.inputs.browser == 'all' && fromJson('["chromium", "firefox", "webkit"]') || fromJson(format('["{0}"]', github.event.inputs.browser || 'chromium')) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Create reports directory
        run: mkdir -p automation/reports

      - name: Run Playwright tests
        run: |
          if [ -n "${{ github.event.inputs.test_tag }}" ]; then
            npx playwright test --project=${{ matrix.browser }} --grep "${{ github.event.inputs.test_tag }}"
          else
            npx playwright test --project=${{ matrix.browser }} --grep "@smoke"
          fi
        env:
          BROWSER: ${{ matrix.browser }}

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ github.run_number }}
          path: |
            automation/reports/
            test-results/
          retention-days: 30

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-html-report-${{ matrix.browser }}-${{ github.run_number }}
          path: automation/reports/html-report/
          retention-days: 30

  # Smoke tests for critical functionality
  smoke-tests:
    name: Smoke Tests (All Browsers)
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run smoke tests
        run: npx playwright test --project=${{ matrix.browser }} --grep "@smoke @critical"

      - name: Upload smoke test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: smoke-test-artifacts-${{ matrix.browser }}-${{ github.run_number }}
          path: |
            automation/reports/
            test-results/
          retention-days: 7

  # Full regression suite (scheduled runs)
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.test_tag, 'regression'))
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        shard: [1/4, 2/4, 3/4, 4/4]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run regression tests
        run: npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }} --grep "@regression"

      - name: Upload regression test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: regression-artifacts-${{ matrix.browser }}-shard-${{ matrix.shard }}-${{ github.run_number }}
          path: |
            automation/reports/
            test-results/
          retention-days: 14

  # Test results summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, smoke-tests]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts

      - name: Display test summary
        run: |
          echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Status | Artifacts |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|-----------|" >> $GITHUB_STEP_SUMMARY
          
          for browser in chromium firefox webkit; do
            if [ -d "test-artifacts/playwright-report-${browser}-${{ github.run_number }}" ]; then
              echo "| ${browser} | ❌ Failed | Available |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| ${browser} | ✅ Passed | N/A |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  # Notification (optional)
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [test, smoke-tests, regression-tests]
    if: always() && (failure() || success())
    steps:
      - name: Notify Slack (if configured)
        if: vars.SLACK_WEBHOOK_URL
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#qa-automation'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow

      - name: Notify Teams (if configured)
        if: vars.TEAMS_WEBHOOK_URL && failure()
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          title: OpenMRS E2E Test Failure
          summary: Automated tests failed in ${{ github.repository }}
          text: Test execution failed for commit ${{ github.sha }}
          theme_color: 'FF0000'